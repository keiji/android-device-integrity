openapi: 3.0.0
info:
  title: Key Attestation API Service
  version: v1
  description: |-
    Provides endpoints for Key Attestation operations.
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com

tags:
  - name: KeyAttestation
    description: Operations related to Key Attestation.

servers:
  - url: http://localhost:8080 # Replace with your actual server URL in production. This might be a different port or service for Key Attestation.
    description: Development server

paths:
  /key-attestation/prepare/agreement:
    post:
      summary: "Prepare for Key Attestation Agreement"
      description: "Generates a nonce for the key attestation process."
      operationId: "prepareKeyAttestationAgreement"
      tags:
        - KeyAttestation
      responses:
        '200':
          description: "Nonce generated successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  nonce:
                    type: string
                    description: "A unique nonce for the attestation session."
                    example: "generatedNonceValueBase64"
        '500':
          description: "Internal server error during nonce generation."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /key-attestation/verify/agreement:
    post:
      summary: "Verify Key Attestation Agreement"
      description: "Verifies the key attestation data provided by the client."
      operationId: "verifyKeyAttestationAgreement"
      tags:
        - KeyAttestation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attestationData
                - salt
              properties:
                attestationData:
                  type: string
                  description: "Client's attestation data."
                  example: "clientAttestationDataString"
                salt:
                  type: string
                  format: byte
                  description: "Client-generated salt, Base64UrlEncoded."
                  example: "clientGeneratedSaltBase64Url"
      responses:
        '200':
          description: "Attestation verification successful."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Verification completed."
        '400':
          description: "Bad request (e.g., missing fields, invalid data)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: "Attestation verification failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                properties: # Add more specific error details if desired
                  error_details:
                    type: string
                    example: "Nonce mismatch"
        '500':
          description: "Internal server error during verification."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A message describing the error.
          example: "An error occurred" # Generic error for key attestation
  securitySchemes: {}
