openapi: 3.0.0
info:
  title: Key Attestation API Service
  version: v1
  description: |-
    Provides endpoints for Key Attestation operations, including preparation and verification (mocked) for EC keys.
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com

tags:
  - name: KeyAttestationV1
    description: Operations related to Key Attestation v1

servers:
  - url: /key-attestation # Assuming the service is hosted at /key-attestation and blueprint handles /v1/*
    description: Key Attestation Service Base URL

paths:
  /v1/prepare:
    post:
      summary: Prepare Key Attestation
      description: Generates a nonce and challenge for Key Attestation.
      operationId: prepareKeyAttestation
      tags:
        - KeyAttestationV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareRequestBody'
      responses:
        '200':
          description: Successfully generated nonce and challenge.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepareResponseBody'
        '400':
          description: Bad Request (e.g., missing session_id).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/verify/signature:
    post:
      summary: Verify Key Attestation Signature
      description: Verifies the Key Attestation Signature (mock implementation).
      operationId: verifySignatureKeyAttestation
      tags:
        - KeyAttestationV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySignatureRequestBody'
      responses:
        '200':
          description: Successfully processed signature verification (mock response).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifySignatureResponseBody'
        '400':
          description: Bad Request (e.g., missing parameters).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PrepareRequestBody:
      type: object
      required:
        - session_id
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
    PrepareResponseBody:
      type: object
      required:
        - nonce
        - challenge
      properties:
        nonce:
          type: string
          format: byte
          description: Base64URL-encoded nonce.
          example: "SGVsbG8gd29ybGQhMTIzNDU2Nzg5MA=="
        challenge:
          type: string
          format: byte
          description: Base64URL-encoded challenge.
          example: "Q2hhbGxlbmdlMTIzNDU2Nzg5MA=="
    VerifySignatureRequestBody:
      type: object
      required:
        - session_id
        - signature
        - nonce_b
        - certificate_chain
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
        signature:
          type: string
          format: byte
          description: Base64-URL-encoded signature.
          example: "U2lnbmVkRGF0YTEyMzQ1Njc4OTA="
        nonce_b:
          type: string
          format: byte
          description: Base64-encoded second nonce from client.
          example: "Tm9uY2VCMTIzNDU2Nzg5MA=="
        certificate_chain:
          type: array
          items:
            type: string
            format: base64
          description: Array of standard Base64-encoded certificate strings.
          example: ["Y2VydDE=", "Y2VydDI="]
    VerifySignatureResponseBody:
      type: object
      required:
        - session_id
        - is_verified
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
        is_verified:
          type: boolean
          description: Result of the verification.
          example: false
        reason:
          type: string
          description: Reason for verification failure (optional).
          example: "Key attestation verified successfully."
        attestation_info:
          $ref: '#/components/schemas/AttestationInfo'
        device_info:
          $ref: '#/components/schemas/DeviceInfo'
        security_info:
          $ref: '#/components/schemas/SecurityInfo'

    AttestationApplicationId:
      type: object
      required:
        - application_signatures
        - attestation_application_id
      properties:
        application_signatures:
          type: array
          items:
            type: string
            example: "aabbccddeeff..."
          description: List of application signatures.
        attestation_application_id:
          type: string
          description: The application ID.
          example: "com.example.app"
        attestation_application_version_code: # Optional in Kotlin, but if present, it's an int
          type: integer
          format: int32
          description: Version code of the application.
          example: 101
          nullable: true # Explicitly marking as nullable if it can be absent

    RootOfTrust:
      type: object
      required:
        - device_locked
        - verified_boot_hash
        - verified_boot_key
        - verified_boot_state
      properties:
        device_locked:
          type: boolean
          description: Whether the device is locked.
        verified_boot_hash:
          type: string
          format: byte # Assuming this is a hex string representing bytes, common for hashes
          description: Verified boot hash.
          example: "ZGVhZGJlZWY=" # "deadbeef"
        verified_boot_key:
          type: string
          format: byte # Assuming this is a hex string
          description: Verified boot key.
          example: "Y2FmZWJhYmU=" # "cafebabe"
        verified_boot_state:
          type: integer
          format: int32 # Assuming standard integer for state codes
          description: Verified boot state.
          example: 0

    AuthorizationList:
      type: object
      # No fields are universally required in AuthorizationList as per Android spec; presence depends on key generation options
      properties:
        attestation_application_id:
          $ref: '#/components/schemas/AttestationApplicationId'
        creation_datetime:
          type: integer
          format: int64
          description: Key creation timestamp (epoch milliseconds).
          example: 1672531200000
          nullable: true
        algorithm:
          type: integer
          format: int32
          description: Key algorithm.
          example: 3 # EC
          nullable: true
        boot_patch_level:
          type: integer
          format: int32 # YYYYMMDD
          description: Bootloader patch level.
          example: 20230305
          nullable: true
        digests:
          type: array
          items:
            type: integer
            format: int32
          description: Allowed digest algorithms.
          nullable: true
        ec_curve:
          type: integer
          format: int32
          description: EC curve identifier.
          example: 1 # P-256
          nullable: true
        key_size:
          type: integer
          format: int32
          description: Key size in bits.
          example: 256
          nullable: true
        no_auth_required:
          type: boolean
          description: Whether no user authentication is required.
          nullable: true
        origin:
          type: string # Should be integer in spec, but example uses string
          description: Key origin (e.g., generated, imported).
          example: "0" # Generated
          nullable: true
        os_patch_level:
          type: integer
          format: int32 # YYYYMMDD
          description: OS patch level.
          example: 20230405
          nullable: true
        os_version:
          type: integer # Example "0" in spec, but usually major version like 13
          format: int32
          description: OS version.
          example: 13
          nullable: true
        purpose:
          type: array
          items:
            type: integer
            format: int32
          description: Key usage purposes.
          nullable: true
        root_of_trust:
          $ref: '#/components/schemas/RootOfTrust'
        vendor_patch_level:
          type: integer
          format: int32 # YYYYMMDD
          description: Vendor patch level.
          example: 20230201
          nullable: true
        padding:
          type: array
          items:
            type: integer
            format: int32
          description: Allowed padding modes (e.g., PKCS1, PSS, OAEP).
          example: [1, 2]
          nullable: true
        rollback_resistance:
          type: boolean # Representing NULL type, true if present
          description: Indicates if rollback resistance is active. True if the tag is present.
          example: true
          nullable: true
        early_boot_only:
          type: boolean # Representing NULL type, true if present
          description: Indicates if the key can only be used during early boot. True if the tag is present.
          example: true
          nullable: true
        active_datetime:
          type: integer
          format: int64 # Epoch milliseconds
          description: Date and time after which the key is valid.
          example: 1678886400000
          nullable: true
        origination_expire_datetime:
          type: integer
          format: int64 # Epoch milliseconds
          description: Date and time after which the key can no longer be used for origination (signing/encryption).
          example: 1710508800000
          nullable: true
        usage_expire_datetime:
          type: integer
          format: int64 # Epoch milliseconds
          description: Date and time after which the key can no longer be used for any purpose.
          example: 1710508800000
          nullable: true
        usage_count_limit:
          type: integer
          format: int64
          description: Maximum number of times the key can be used.
          example: 1000
          nullable: true
        user_auth_type:
          type: integer # Bitmask
          format: int32
          description: Bitmask of allowed user authentication types (e.g., fingerprint, password).
          example: 3 # (Password | Fingerprint)
          nullable: true
        auth_timeout:
          type: integer
          format: int32 # Seconds
          description: User authentication validity duration in seconds.
          example: 300
          nullable: true
        allow_while_on_body:
          type: boolean # Representing NULL type, true if present
          description: Allows key use while the device is on-body. True if the tag is present.
          example: true
          nullable: true
        trusted_user_presence_required:
          type: boolean # Representing NULL type, true if present
          description: Requires trusted user presence for key use. True if the tag is present.
          example: true
          nullable: true
        trusted_confirmation_required:
          type: boolean # Representing NULL type, true if present
          description: Requires trusted confirmation for key use. True if the tag is present.
          example: true
          nullable: true
        unlocked_device_required:
          type: boolean # Representing NULL type, true if present
          description: Requires the device to be unlocked for key use. True if the tag is present.
          example: true
          nullable: true
        attestation_id_brand:
          type: string
          description: Brand of the device.
          example: "Google"
          nullable: true
        attestation_id_device:
          type: string
          description: Device name.
          example: "Pixel"
          nullable: true
        attestation_id_product:
          type: string
          description: Product name.
          example: "raven"
          nullable: true
        attestation_id_serial:
          type: string
          description: Serial number of the device.
          example: "SERIAL12345"
          nullable: true
        attestation_id_imei:
          type: string
          description: IMEI of the device.
          example: "350000000000000"
          nullable: true
        attestation_id_meid:
          type: string
          description: MEID of the device.
          example: "A0000000000000"
          nullable: true
        attestation_id_manufacturer:
          type: string
          description: Manufacturer of the device.
          example: "Google"
          nullable: true
        attestation_id_model:
          type: string
          description: Model of the device.
          example: "Pixel 6 Pro"
          nullable: true
        device_unique_attestation:
          type: boolean # Representing NULL type, true if present
          description: Indicates if the attestation is device-unique. True if the tag is present.
          example: true
          nullable: true
        attestation_id_second_imei:
          type: string
          description: Second IMEI of the device, if available.
          example: "350000000000001"
          nullable: true
        mgf_digest: # Was missing from existing OpenAPI but present in Python
          type: array
          items:
            type: integer
            format: int32
          description: Allowed MGF digest algorithms for RSA PSS/OAEP.
          example: [4] # SHA256
          nullable: true
        module_hash: # Was missing from existing OpenAPI but present in Python
          type: string
          format: byte # Base64URL Encoded
          description: Hash of the KeyMint module if available.
          example: "dGVzdF9oYXNo" # "test_hash" base64url encoded
          nullable: true
      description: Contains properties of the key attestation. Fields are optional based on key characteristics.

    AttestationInfo:
      type: object
      required:
        - attestation_security_level
        - attestation_version
        - keymint_security_level
        - keymint_version
        - attestation_challenge # Now required
        - software_enforced_properties
        - hardware_enforced_properties # Now required
      properties:
        attestation_security_level:
          type: integer
          format: int32
          example: 1 # StrongBox
        attestation_version:
          type: integer
          format: int32
          example: 4
        keymint_security_level:
          type: integer
          format: int32
          example: 1 # StrongBox
        keymint_version:
          type: integer
          format: int32
          example: 200 # KeyMint version, e.g., Android 12+
        attestation_challenge:
          type: string
          format: byte # Base64URL encoded
          description: The challenge value from the attestation certificate, base64url encoded.
          example: "Y2hhbGxlbmdlX3N0cmluZw==" # "challenge_string"
        software_enforced_properties:
          $ref: '#/components/schemas/AuthorizationList'
        hardware_enforced_properties:
          $ref: '#/components/schemas/AuthorizationList' # Not nullable itself, can be an empty object {}

    DeviceInfo:
      type: object
      # All fields are typically strings, SDK_INT is int. Assuming all are sent.
      required:
        - brand
        - model
        - device
        - product
        - manufacturer
        - hardware
        - board
        - bootloader
        - version_release
        - sdk_int
        - fingerprint
        - security_patch
      properties:
        brand: { type: string, example: "Google" }
        model: { type: string, example: "Pixel 7" }
        device: { type: string, example: "panther" }
        product: { type: string, example: "panther_us" }
        manufacturer: { type: string, example: "Google" }
        hardware: { type: string, example: "gs201" }
        board: { type: string, example: "slider" }
        bootloader: { type: string, example: "slider-1.0-..." }
        version_release: { type: string, example: "13" }
        sdk_int: { type: integer, format: int32, example: 33 }
        fingerprint: { type: string, example: "google/panther/panther:13/..." }
        security_patch: { type: string, example: "2023-05-01" }

    SecurityInfo:
      type: object
      required:
        - is_device_lock_enabled
        - is_biometrics_enabled
        - has_class_3_authenticator
        - has_strongbox
      properties:
        is_device_lock_enabled: { type: boolean, example: true }
        is_biometrics_enabled: { type: boolean, example: true }
        has_class_3_authenticator: { type: boolean, example: true }
        has_strongbox: { type: boolean, example: true }

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A message describing the error.
          example: "An error occurred"
  securitySchemes: {}
