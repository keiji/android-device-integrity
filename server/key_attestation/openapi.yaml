openapi: 3.0.0
info:
  title: Key Attestation API Service
  version: v1
  description: |-
    Provides endpoints for Key Attestation operations, including preparation and verification (mocked) for EC keys.
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com

tags:
  - name: KeyAttestationV1
    description: Operations related to Key Attestation v1

servers:
  - url: /key-attestation # Assuming the service is hosted at /key-attestation and blueprint handles /v1/*
    description: Key Attestation Service Base URL

paths:
  /v1/prepare:
    post:
      summary: Prepare Key Attestation
      description: Generates a nonce and challenge for Key Attestation.
      operationId: prepareKeyAttestation
      tags:
        - KeyAttestationV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareRequestBody'
      responses:
        '200':
          description: Successfully generated nonce and challenge.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepareResponseBody'
        '400':
          description: Bad Request (e.g., missing session_id).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/verify/ec:
    post:
      summary: Verify EC Key Attestation
      description: Verifies the EC Key Attestation (mock implementation).
      operationId: verifyEcKeyAttestation
      tags:
        - KeyAttestationV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEcRequestBody'
      responses:
        '200':
          description: Successfully processed EC verification (mock response).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEcResponseBody'
        '400':
          description: Bad Request (e.g., missing parameters).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PrepareRequestBody:
      type: object
      required:
        - session_id
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
    PrepareResponseBody:
      type: object
      required:
        - nonce
        - challenge
      properties:
        nonce:
          type: string
          format: byte
          description: Base64URL-encoded nonce.
          example: "SGVsbG8gd29ybGQhMTIzNDU2Nzg5MA=="
        challenge:
          type: string
          format: byte
          description: Base64URL-encoded challenge.
          example: "Q2hhbGxlbmdlMTIzNDU2Nzg5MA=="
    VerifyEcRequestBody:
      type: object
      required:
        - session_id
        - signed_data
        - nonce_b
        - certificate_chain
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
        signed_data:
          type: string
          format: byte
          description: Base64-encoded signed data.
          example: "U2lnbmVkRGF0YTEyMzQ1Njc4OTA="
        nonce_b:
          type: string
          format: byte
          description: Base64-encoded second nonce from client.
          example: "Tm9uY2VCMTIzNDU2Nzg5MA=="
        certificate_chain:
          type: array
          items:
            type: string
            format: byte
          description: Array of Base64-encoded certificate strings.
          example: ["Y2VydDE=", "Y2VydDI="]
    VerifyEcResponseBody:
      type: object
      required:
        - session_id
        - is_verified
      properties:
        session_id:
          type: string
          description: Client session ID.
          example: "session-12345-abcde"
        is_verified:
          type: boolean
          description: Result of the verification.
          example: false
        reason:
          type: string
          description: Reason for verification failure (optional).
          example: "Mock implementation"
        decoded_certificate_chain:
          type: object
          description: Mocked decoded certificate chain details.
          properties:
            mocked_detail:
              type: string
              example: "This is a mock response for decoded certificate chain."
          required:
            - mocked_detail
        attestation_properties:
          type: object
          description: Mocked attestation properties.
          properties:
            mocked_software_enforced:
              type: object
            mocked_tee_enforced:
              type: object
          required:
            - mocked_software_enforced
            - mocked_tee_enforced
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A message describing the error.
          example: "An error occurred"
  securitySchemes: {}
