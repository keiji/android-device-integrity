# This is a basic workflow to help you get started with Actions

name: Android Build Check

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
    paths:
      - 'android/**'
      - '.github/workflows/build_check.yml' # To ensure changes to the workflow itself are checked
    paths-ignore:
      - 'android/docs/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'android/**'
      - '.github/workflows/build_check.yml' # To ensure changes to the workflow itself are checked
    paths-ignore:
      - 'android/docs/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "buildCheck"
  buildCheck:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('**/*.gradle*') }}-
            gradle-

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew
        working-directory: ./

      # Build with Gradle
      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./android
